package xyz.quazaros;

import org.bukkit.Bukkit;
import org.bukkit.MusicInstrument;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.inventory.meta.EnchantmentStorageMeta;
import org.bukkit.inventory.meta.MusicInstrumentMeta;
import org.bukkit.inventory.meta.PotionMeta;
import org.bukkit.potion.PotionType;

import java.util.ArrayList;
import java.util.List;

public class metaList {
    ArrayList<item> items;
    ArrayList<item> mobs;

    ArrayList<enchantments> enchantment_list;
    ArrayList<ArrayList<enchantments>> main_enchantment_list;
    ArrayList<potions> potion_list;
    ArrayList<instruments> instrument_list;

    int version;

    public metaList() {
        items = new ArrayList<>();
        mobs = new ArrayList<>();
        enchantment_list = new ArrayList<>();
        main_enchantment_list = new ArrayList<>();
        potion_list = new ArrayList<>();
        instrument_list = new ArrayList<>();

        version = get_version();

        initialize_enchantedBooks();
        initialize_potions();
        initialize_horns();
        initialize_items();
        initialize_mobs();
    }

    private void initialize_items() {
        items.add(new item("oak_log"));
        items.add(new item("oak_wood"));
        items.add(new item("stripped_oak_log"));
        items.add(new item("stripped_oak_wood"));
        items.add(new item("oak_planks"));
        items.add(new item("oak_stairs"));
        items.add(new item("oak_slab"));
        items.add(new item("oak_door"));
        items.add(new item("oak_trapdoor"));
        items.add(new item("oak_fence"));
        items.add(new item("oak_fence_gate"));
        items.add(new item("oak_sign"));
        items.add(new item("oak_hanging_sign"));
        items.add(new item("oak_button"));
        items.add(new item("oak_pressure_plate"));
        items.add(new item("oak_boat"));
        items.add(new item("oak_chest_boat"));
        items.add(new item("oak_leaves"));
        items.add(new item("azalea_leaves"));
        items.add(new item("flowering_azalea_leaves"));
        items.add(new item("oak_sapling"));
        items.add(new item("birch_log"));
        items.add(new item("birch_wood"));
        items.add(new item("stripped_birch_log"));
        items.add(new item("stripped_birch_wood"));
        items.add(new item("birch_planks"));
        items.add(new item("birch_stairs"));
        items.add(new item("birch_slab"));
        items.add(new item("birch_door"));
        items.add(new item("birch_trapdoor"));
        items.add(new item("birch_fence"));
        items.add(new item("birch_fence_gate"));
        items.add(new item("birch_sign"));
        items.add(new item("birch_hanging_sign"));
        items.add(new item("birch_button"));
        items.add(new item("birch_pressure_plate"));
        items.add(new item("birch_boat"));
        items.add(new item("birch_chest_boat"));
        items.add(new item("birch_leaves"));
        items.add(new item("birch_sapling"));
        items.add(new item("spruce_log"));
        items.add(new item("spruce_wood"));
        items.add(new item("stripped_spruce_log"));
        items.add(new item("stripped_spruce_wood"));
        items.add(new item("spruce_planks"));
        items.add(new item("spruce_stairs"));
        items.add(new item("spruce_slab"));
        items.add(new item("spruce_door"));
        items.add(new item("spruce_trapdoor"));
        items.add(new item("spruce_fence"));
        items.add(new item("spruce_fence_gate"));
        items.add(new item("spruce_sign"));
        items.add(new item("spruce_hanging_sign"));
        items.add(new item("spruce_button"));
        items.add(new item("spruce_pressure_plate"));
        items.add(new item("spruce_boat"));
        items.add(new item("spruce_chest_boat"));
        items.add(new item("spruce_leaves"));
        items.add(new item("spruce_sapling"));
        items.add(new item("acacia_log"));
        items.add(new item("acacia_wood"));
        items.add(new item("stripped_acacia_log"));
        items.add(new item("stripped_acacia_wood"));
        items.add(new item("acacia_planks"));
        items.add(new item("acacia_stairs"));
        items.add(new item("acacia_slab"));
        items.add(new item("acacia_door"));
        items.add(new item("acacia_trapdoor"));
        items.add(new item("acacia_fence"));
        items.add(new item("acacia_fence_gate"));
        items.add(new item("acacia_sign"));
        items.add(new item("acacia_hanging_sign"));
        items.add(new item("acacia_button"));
        items.add(new item("acacia_pressure_plate"));
        items.add(new item("acacia_boat"));
        items.add(new item("acacia_chest_boat"));
        items.add(new item("acacia_leaves"));
        items.add(new item("acacia_sapling"));
        items.add(new item("jungle_log"));
        items.add(new item("jungle_wood"));
        items.add(new item("stripped_jungle_log"));
        items.add(new item("stripped_jungle_wood"));
        items.add(new item("jungle_planks"));
        items.add(new item("jungle_stairs"));
        items.add(new item("jungle_slab"));
        items.add(new item("jungle_door"));
        items.add(new item("jungle_trapdoor"));
        items.add(new item("jungle_fence"));
        items.add(new item("jungle_fence_gate"));
        items.add(new item("jungle_sign"));
        items.add(new item("jungle_hanging_sign"));
        items.add(new item("jungle_button"));
        items.add(new item("jungle_pressure_plate"));
        items.add(new item("jungle_boat"));
        items.add(new item("jungle_chest_boat"));
        items.add(new item("jungle_leaves"));
        items.add(new item("jungle_sapling"));
        items.add(new item("dark_oak_log"));
        items.add(new item("dark_oak_wood"));
        items.add(new item("stripped_dark_oak_log"));
        items.add(new item("stripped_dark_oak_wood"));
        items.add(new item("dark_oak_planks"));
        items.add(new item("dark_oak_stairs"));
        items.add(new item("dark_oak_slab"));
        items.add(new item("dark_oak_door"));
        items.add(new item("dark_oak_trapdoor"));
        items.add(new item("dark_oak_fence"));
        items.add(new item("dark_oak_fence_gate"));
        items.add(new item("dark_oak_sign"));
        items.add(new item("dark_oak_hanging_sign"));
        items.add(new item("dark_oak_button"));
        items.add(new item("dark_oak_pressure_plate"));
        items.add(new item("dark_oak_boat"));
        items.add(new item("dark_oak_chest_boat"));
        items.add(new item("dark_oak_leaves"));
        items.add(new item("dark_oak_sapling"));
        items.add(new item("mangrove_log"));
        items.add(new item("mangrove_wood"));
        items.add(new item("stripped_mangrove_log"));
        items.add(new item("stripped_mangrove_wood"));
        items.add(new item("mangrove_planks"));
        items.add(new item("mangrove_stairs"));
        items.add(new item("mangrove_slab"));
        items.add(new item("mangrove_door"));
        items.add(new item("mangrove_trapdoor"));
        items.add(new item("mangrove_fence"));
        items.add(new item("mangrove_fence_gate"));
        items.add(new item("mangrove_sign"));
        items.add(new item("mangrove_hanging_sign"));
        items.add(new item("mangrove_button"));
        items.add(new item("mangrove_pressure_plate"));
        items.add(new item("mangrove_boat"));
        items.add(new item("mangrove_chest_boat"));
        items.add(new item("mangrove_leaves"));
        items.add(new item("mangrove_roots"));
        items.add(new item("muddy_mangrove_roots"));
        items.add(new item("mangrove_propagule"));
        items.add(new item("cherry_log"));
        items.add(new item("cherry_wood"));
        items.add(new item("stripped_cherry_log"));
        items.add(new item("stripped_cherry_wood"));
        items.add(new item("cherry_planks"));
        items.add(new item("cherry_stairs"));
        items.add(new item("cherry_slab"));
        items.add(new item("cherry_door"));
        items.add(new item("cherry_trapdoor"));
        items.add(new item("cherry_fence"));
        items.add(new item("cherry_fence_gate"));
        items.add(new item("cherry_sign"));
        items.add(new item("cherry_hanging_sign"));
        items.add(new item("cherry_button"));
        items.add(new item("cherry_pressure_plate"));
        items.add(new item("cherry_boat"));
        items.add(new item("cherry_chest_boat"));
        items.add(new item("cherry_leaves"));
        items.add(new item("cherry_sapling"));
        items.add(new item("pale_oak_log"));
        items.add(new item("pale_oak_wood"));
        items.add(new item("stripped_pale_oak_log"));
        items.add(new item("stripped_pale_oak_wood"));
        items.add(new item("pale_oak_planks"));
        items.add(new item("pale_oak_stairs"));
        items.add(new item("pale_oak_slab"));
        items.add(new item("pale_oak_door"));
        items.add(new item("pale_oak_trapdoor"));
        items.add(new item("pale_oak_fence"));
        items.add(new item("pale_oak_fence_gate"));
        items.add(new item("pale_oak_sign"));
        items.add(new item("pale_oak_hanging_sign"));
        items.add(new item("pale_oak_button"));
        items.add(new item("pale_oak_pressure_plate"));
        items.add(new item("pale_oak_boat"));
        items.add(new item("pale_oak_chest_boat"));
        items.add(new item("pale_oak_leaves"));
        items.add(new item("pale_oak_sapling"));
        items.add(new item("bamboo_block"));
        items.add(new item("stripped_bamboo_block"));
        items.add(new item("bamboo_planks"));
        items.add(new item("bamboo_stairs"));
        items.add(new item("bamboo_slab"));
        items.add(new item("bamboo_mosaic"));
        items.add(new item("bamboo_mosaic_stairs"));
        items.add(new item("bamboo_mosaic_slab"));
        items.add(new item("bamboo_door"));
        items.add(new item("bamboo_trapdoor"));
        items.add(new item("bamboo_fence"));
        items.add(new item("bamboo_fence_gate"));
        items.add(new item("bamboo_sign"));
        items.add(new item("bamboo_hanging_sign"));
        items.add(new item("bamboo_button"));
        items.add(new item("bamboo_pressure_plate"));
        items.add(new item("bamboo_raft"));
        items.add(new item("bamboo_chest_raft"));
        items.add(new item("crimson_stem"));
        items.add(new item("crimson_hyphae"));
        items.add(new item("stripped_crimson_stem"));
        items.add(new item("stripped_crimson_hyphae"));
        items.add(new item("crimson_planks"));
        items.add(new item("crimson_stairs"));
        items.add(new item("crimson_slab"));
        items.add(new item("crimson_door"));
        items.add(new item("crimson_trapdoor"));
        items.add(new item("crimson_fence"));
        items.add(new item("crimson_fence_gate"));
        items.add(new item("crimson_sign"));
        items.add(new item("crimson_hanging_sign"));
        items.add(new item("crimson_button"));
        items.add(new item("crimson_pressure_plate"));
        items.add(new item("nether_wart_block"));
        items.add(new item("crimson_fungus"));
        items.add(new item("warped_stem"));
        items.add(new item("warped_hyphae"));
        items.add(new item("stripped_warped_stem"));
        items.add(new item("stripped_warped_hyphae"));
        items.add(new item("warped_planks"));
        items.add(new item("warped_stairs"));
        items.add(new item("warped_slab"));
        items.add(new item("warped_door"));
        items.add(new item("warped_trapdoor"));
        items.add(new item("warped_fence"));
        items.add(new item("warped_fence_gate"));
        items.add(new item("warped_sign"));
        items.add(new item("warped_hanging_sign"));
        items.add(new item("warped_button"));
        items.add(new item("warped_pressure_plate"));
        items.add(new item("warped_wart_block"));
        items.add(new item("warped_fungus"));
        items.add(new item("stone"));
        items.add(new item("stone_stairs"));
        items.add(new item("stone_slab"));
        items.add(new item("stone_pressure_plate"));
        items.add(new item("stone_button"));
        items.add(new item("cobblestone"));
        items.add(new item("cobblestone_stairs"));
        items.add(new item("cobblestone_slab"));
        items.add(new item("cobblestone_wall"));
        items.add(new item("mossy_cobblestone"));
        items.add(new item("mossy_cobblestone_stairs"));
        items.add(new item("mossy_cobblestone_slab"));
        items.add(new item("mossy_cobblestone_wall"));
        items.add(new item("smooth_stone"));
        items.add(new item("smooth_stone_slab"));
        items.add(new item("stone_bricks"));
        items.add(new item("chiseled_stone_bricks"));
        items.add(new item("cracked_stone_bricks"));
        items.add(new item("stone_brick_stairs"));
        items.add(new item("stone_brick_slab"));
        items.add(new item("stone_brick_wall"));
        items.add(new item("mossy_stone_bricks"));
        items.add(new item("mossy_stone_brick_stairs"));
        items.add(new item("mossy_stone_brick_slab"));
        items.add(new item("mossy_stone_brick_wall"));
        items.add(new item("granite"));
        items.add(new item("granite_stairs"));
        items.add(new item("granite_slab"));
        items.add(new item("granite_wall"));
        items.add(new item("polished_granite"));
        items.add(new item("polished_granite_stairs"));
        items.add(new item("polished_granite_slab"));
        items.add(new item("diorite"));
        items.add(new item("diorite_stairs"));
        items.add(new item("diorite_slab"));
        items.add(new item("diorite_wall"));
        items.add(new item("polished_diorite"));
        items.add(new item("polished_diorite_stairs"));
        items.add(new item("polished_diorite_slab"));
        items.add(new item("andesite"));
        items.add(new item("andesite_stairs"));
        items.add(new item("andesite_slab"));
        items.add(new item("andesite_wall"));
        items.add(new item("polished_andesite"));
        items.add(new item("polished_andesite_stairs"));
        items.add(new item("polished_andesite_slab"));
        items.add(new item("deepslate"));
        items.add(new item("cobbled_deepslate"));
        items.add(new item("cobbled_deepslate_stairs"));
        items.add(new item("cobbled_deepslate_slab"));
        items.add(new item("cobbled_deepslate_wall"));
        items.add(new item("chiseled_deepslate"));
        items.add(new item("polished_deepslate"));
        items.add(new item("polished_deepslate_stairs"));
        items.add(new item("polished_deepslate_slab"));
        items.add(new item("polished_deepslate_wall"));
        items.add(new item("deepslate_bricks"));
        items.add(new item("cracked_deepslate_bricks"));
        items.add(new item("deepslate_brick_stairs"));
        items.add(new item("deepslate_brick_slab"));
        items.add(new item("deepslate_brick_wall"));
        items.add(new item("deepslate_tiles"));
        items.add(new item("cracked_deepslate_tiles"));
        items.add(new item("deepslate_tile_stairs"));
        items.add(new item("deepslate_tile_slab"));
        items.add(new item("deepslate_tile_wall"));
        items.add(new item("tuff"));
        items.add(new item("tuff_stairs"));
        items.add(new item("tuff_slab"));
        items.add(new item("tuff_wall"));
        items.add(new item("chiseled_tuff"));
        items.add(new item("polished_tuff"));
        items.add(new item("polished_tuff_stairs"));
        items.add(new item("polished_tuff_slab"));
        items.add(new item("polished_tuff_wall"));
        items.add(new item("tuff_bricks"));
        items.add(new item("chiseled_tuff_bricks"));
        items.add(new item("tuff_brick_stairs"));
        items.add(new item("tuff_brick_slab"));
        items.add(new item("tuff_brick_wall"));
        items.add(new item("bricks"));
        items.add(new item("brick_stairs"));
        items.add(new item("brick_slab"));
        items.add(new item("brick_wall"));
        items.add(new item("packed_mud"));
        items.add(new item("mud_bricks"));
        items.add(new item("mud_brick_stairs"));
        items.add(new item("mud_brick_slab"));
        items.add(new item("mud_brick_wall"));
        items.add(new item("resin_block"));
        items.add(new item("resin_bricks"));
        items.add(new item("resin_brick_stairs"));
        items.add(new item("resin_brick_slab"));
        items.add(new item("resin_brick_wall"));
        items.add(new item("chiseled_resin_bricks"));
        items.add(new item("sandstone"));
        items.add(new item("sandstone_stairs"));
        items.add(new item("sandstone_slab"));
        items.add(new item("sandstone_wall"));
        items.add(new item("smooth_sandstone"));
        items.add(new item("smooth_sandstone_stairs"));
        items.add(new item("smooth_sandstone_slab"));
        items.add(new item("cut_sandstone"));
        items.add(new item("cut_sandstone_slab"));
        items.add(new item("chiseled_sandstone"));
        items.add(new item("red_sandstone"));
        items.add(new item("red_sandstone_stairs"));
        items.add(new item("red_sandstone_slab"));
        items.add(new item("red_sandstone_wall"));
        items.add(new item("smooth_red_sandstone"));
        items.add(new item("smooth_red_sandstone_stairs"));
        items.add(new item("smooth_red_sandstone_slab"));
        items.add(new item("cut_red_sandstone"));
        items.add(new item("cut_red_sandstone_slab"));
        items.add(new item("chiseled_red_sandstone"));
        items.add(new item("prismarine"));
        items.add(new item("prismarine_stairs"));
        items.add(new item("prismarine_slab"));
        items.add(new item("prismarine_wall"));
        items.add(new item("prismarine_bricks"));
        items.add(new item("prismarine_brick_stairs"));
        items.add(new item("prismarine_brick_slab"));
        items.add(new item("dark_prismarine"));
        items.add(new item("dark_prismarine_stairs"));
        items.add(new item("dark_prismarine_slab"));
        items.add(new item("nether_bricks"));
        items.add(new item("cracked_nether_bricks"));
        items.add(new item("nether_brick_stairs"));
        items.add(new item("nether_brick_slab"));
        items.add(new item("nether_brick_wall"));
        items.add(new item("nether_brick_fence"));
        items.add(new item("red_nether_bricks"));
        items.add(new item("red_nether_brick_stairs"));
        items.add(new item("red_nether_brick_slab"));
        items.add(new item("red_nether_brick_wall"));
        items.add(new item("basalt"));
        items.add(new item("smooth_basalt"));
        items.add(new item("polished_basalt"));
        items.add(new item("blackstone"));
        items.add(new item("gilded_blackstone"));
        items.add(new item("blackstone_stairs"));
        items.add(new item("blackstone_slab"));
        items.add(new item("blackstone_wall"));
        items.add(new item("polished_blackstone"));
        items.add(new item("chiseled_polished_blackstone"));
        items.add(new item("polished_blackstone_stairs"));
        items.add(new item("polished_blackstone_slab"));
        items.add(new item("polished_blackstone_wall"));
        items.add(new item("polished_blackstone_button"));
        items.add(new item("polished_blackstone_pressure_plate"));
        items.add(new item("polished_blackstone_bricks"));
        items.add(new item("cracked_polished_blackstone_bricks"));
        items.add(new item("polished_blackstone_brick_stairs"));
        items.add(new item("polished_blackstone_brick_slab"));
        items.add(new item("polished_blackstone_brick_wall"));
        items.add(new item("end_stone"));
        items.add(new item("end_stone_brick_slab"));
        items.add(new item("end_stone_brick_stairs"));
        items.add(new item("end_stone_brick_wall"));
        items.add(new item("end_stone_bricks"));
        items.add(new item("purpur_block"));
        items.add(new item("purpur_pillar"));
        items.add(new item("purpur_stairs"));
        items.add(new item("purpur_slab"));
        items.add(new item("quartz_block"));
        items.add(new item("quartz_bricks"));
        items.add(new item("quartz_pillar"));
        items.add(new item("quartz_stairs"));
        items.add(new item("quartz_slab"));
        items.add(new item("smooth_quartz"));
        items.add(new item("smooth_quartz_stairs"));
        items.add(new item("smooth_quartz_slab"));
        items.add(new item("chiseled_quartz_block"));
        items.add(new item("iron_door"));
        items.add(new item("iron_trapdoor"));
        items.add(new item("heavy_weighted_pressure_plate"));
        items.add(new item("iron_bars"));
        items.add(new item("chain"));
        items.add(new item("light_weighted_pressure_plate"));
        items.add(new item("coal_ore"));
        items.add(new item("deepslate_coal_ore"));
        items.add(new item("iron_ore"));
        items.add(new item("deepslate_iron_ore"));
        items.add(new item("copper_ore"));
        items.add(new item("deepslate_copper_ore"));
        items.add(new item("gold_ore"));
        items.add(new item("deepslate_gold_ore"));
        items.add(new item("diamond_ore"));
        items.add(new item("deepslate_diamond_ore"));
        items.add(new item("emerald_ore"));
        items.add(new item("deepslate_emerald_ore"));
        items.add(new item("redstone_ore"));
        items.add(new item("deepslate_redstone_ore"));
        items.add(new item("lapis_ore"));
        items.add(new item("deepslate_lapis_ore"));
        items.add(new item("raw_iron_block"));
        items.add(new item("raw_copper_block"));
        items.add(new item("nether_quartz_ore"));
        items.add(new item("nether_gold_ore"));
        items.add(new item("ancient_debris"));
        items.add(new item("coal_block"));
        items.add(new item("iron_block"));
        items.add(new item("gold_block"));
        items.add(new item("diamond_block"));
        items.add(new item("emerald_block"));
        items.add(new item("redstone_block"));
        items.add(new item("lapis_block"));
        items.add(new item("netherite_block"));
        items.add(new item("copper_block"));
        items.add(new item("chiseled_copper"));
        items.add(new item("copper_grate"));
        items.add(new item("cut_copper"));
        items.add(new item("cut_copper_stairs"));
        items.add(new item("cut_copper_slab"));
        items.add(new item("copper_bulb"));
        items.add(new item("copper_door"));
        items.add(new item("copper_trapdoor"));
        items.add(new item("exposed_copper"));
        items.add(new item("exposed_chiseled_copper"));
        items.add(new item("exposed_copper_grate"));
        items.add(new item("exposed_cut_copper"));
        items.add(new item("exposed_cut_copper_stairs"));
        items.add(new item("exposed_cut_copper_slab"));
        items.add(new item("exposed_copper_bulb"));
        items.add(new item("exposed_copper_door"));
        items.add(new item("exposed_copper_trapdoor"));
        items.add(new item("weathered_copper"));
        items.add(new item("weathered_chiseled_copper"));
        items.add(new item("weathered_copper_grate"));
        items.add(new item("weathered_cut_copper"));
        items.add(new item("weathered_cut_copper_stairs"));
        items.add(new item("weathered_cut_copper_slab"));
        items.add(new item("weathered_copper_bulb"));
        items.add(new item("weathered_copper_door"));
        items.add(new item("weathered_copper_trapdoor"));
        items.add(new item("oxidized_copper"));
        items.add(new item("oxidized_chiseled_copper"));
        items.add(new item("oxidized_copper_grate"));
        items.add(new item("oxidized_cut_copper"));
        items.add(new item("oxidized_cut_copper_stairs"));
        items.add(new item("oxidized_cut_copper_slab"));
        items.add(new item("oxidized_copper_bulb"));
        items.add(new item("oxidized_copper_door"));
        items.add(new item("oxidized_copper_trapdoor"));
        items.add(new item("waxed_copper_block"));
        items.add(new item("waxed_chiseled_copper"));
        items.add(new item("waxed_copper_grate"));
        items.add(new item("waxed_cut_copper"));
        items.add(new item("waxed_cut_copper_stairs"));
        items.add(new item("waxed_cut_copper_slab"));
        items.add(new item("waxed_copper_bulb"));
        items.add(new item("waxed_copper_door"));
        items.add(new item("waxed_copper_trapdoor"));
        items.add(new item("waxed_exposed_copper"));
        items.add(new item("waxed_exposed_chiseled_copper"));
        items.add(new item("waxed_exposed_copper_grate"));
        items.add(new item("waxed_exposed_cut_copper"));
        items.add(new item("waxed_exposed_cut_copper_stairs"));
        items.add(new item("waxed_exposed_cut_copper_slab"));
        items.add(new item("waxed_exposed_copper_bulb"));
        items.add(new item("waxed_exposed_copper_door"));
        items.add(new item("waxed_exposed_copper_trapdoor"));
        items.add(new item("waxed_weathered_copper"));
        items.add(new item("waxed_weathered_chiseled_copper"));
        items.add(new item("waxed_weathered_copper_grate"));
        items.add(new item("waxed_weathered_cut_copper"));
        items.add(new item("waxed_weathered_cut_copper_stairs"));
        items.add(new item("waxed_weathered_cut_copper_slab"));
        items.add(new item("waxed_weathered_copper_bulb"));
        items.add(new item("waxed_weathered_copper_door"));
        items.add(new item("waxed_weathered_copper_trapdoor"));
        items.add(new item("waxed_oxidized_copper"));
        items.add(new item("waxed_oxidized_chiseled_copper"));
        items.add(new item("waxed_oxidized_copper_grate"));
        items.add(new item("waxed_oxidized_cut_copper"));
        items.add(new item("waxed_oxidized_cut_copper_stairs"));
        items.add(new item("waxed_oxidized_cut_copper_slab"));
        items.add(new item("waxed_oxidized_copper_bulb"));
        items.add(new item("waxed_oxidized_copper_door"));
        items.add(new item("waxed_oxidized_copper_trapdoor"));
        items.add(new item("red_wool"));
        items.add(new item("orange_wool"));
        items.add(new item("yellow_wool"));
        items.add(new item("lime_wool"));
        items.add(new item("green_wool"));
        items.add(new item("light_blue_wool"));
        items.add(new item("cyan_wool"));
        items.add(new item("blue_wool"));
        items.add(new item("purple_wool"));
        items.add(new item("magenta_wool"));
        items.add(new item("pink_wool"));
        items.add(new item("white_wool"));
        items.add(new item("light_gray_wool"));
        items.add(new item("gray_wool"));
        items.add(new item("black_wool"));
        items.add(new item("brown_wool"));
        items.add(new item("red_carpet"));
        items.add(new item("orange_carpet"));
        items.add(new item("yellow_carpet"));
        items.add(new item("lime_carpet"));
        items.add(new item("green_carpet"));
        items.add(new item("light_blue_carpet"));
        items.add(new item("cyan_carpet"));
        items.add(new item("blue_carpet"));
        items.add(new item("purple_carpet"));
        items.add(new item("magenta_carpet"));
        items.add(new item("pink_carpet"));
        items.add(new item("white_carpet"));
        items.add(new item("light_gray_carpet"));
        items.add(new item("gray_carpet"));
        items.add(new item("black_carpet"));
        items.add(new item("brown_carpet"));
        items.add(new item("terracotta"));
        items.add(new item("red_terracotta"));
        items.add(new item("orange_terracotta"));
        items.add(new item("yellow_terracotta"));
        items.add(new item("lime_terracotta"));
        items.add(new item("green_terracotta"));
        items.add(new item("light_blue_terracotta"));
        items.add(new item("cyan_terracotta"));
        items.add(new item("blue_terracotta"));
        items.add(new item("purple_terracotta"));
        items.add(new item("magenta_terracotta"));
        items.add(new item("pink_terracotta"));
        items.add(new item("white_terracotta"));
        items.add(new item("light_gray_terracotta"));
        items.add(new item("gray_terracotta"));
        items.add(new item("black_terracotta"));
        items.add(new item("brown_terracotta"));
        items.add(new item("red_glazed_terracotta"));
        items.add(new item("orange_glazed_terracotta"));
        items.add(new item("yellow_glazed_terracotta"));
        items.add(new item("lime_glazed_terracotta"));
        items.add(new item("green_glazed_terracotta"));
        items.add(new item("light_blue_glazed_terracotta"));
        items.add(new item("cyan_glazed_terracotta"));
        items.add(new item("blue_glazed_terracotta"));
        items.add(new item("purple_glazed_terracotta"));
        items.add(new item("magenta_glazed_terracotta"));
        items.add(new item("pink_glazed_terracotta"));
        items.add(new item("white_glazed_terracotta"));
        items.add(new item("light_gray_glazed_terracotta"));
        items.add(new item("gray_glazed_terracotta"));
        items.add(new item("black_glazed_terracotta"));
        items.add(new item("brown_glazed_terracotta"));
        items.add(new item("red_concrete"));
        items.add(new item("orange_concrete"));
        items.add(new item("yellow_concrete"));
        items.add(new item("lime_concrete"));
        items.add(new item("green_concrete"));
        items.add(new item("light_blue_concrete"));
        items.add(new item("cyan_concrete"));
        items.add(new item("blue_concrete"));
        items.add(new item("purple_concrete"));
        items.add(new item("magenta_concrete"));
        items.add(new item("pink_concrete"));
        items.add(new item("white_concrete"));
        items.add(new item("light_gray_concrete"));
        items.add(new item("gray_concrete"));
        items.add(new item("black_concrete"));
        items.add(new item("brown_concrete"));
        items.add(new item("red_concrete_powder"));
        items.add(new item("orange_concrete_powder"));
        items.add(new item("yellow_concrete_powder"));
        items.add(new item("lime_concrete_powder"));
        items.add(new item("green_concrete_powder"));
        items.add(new item("light_blue_concrete_powder"));
        items.add(new item("cyan_concrete_powder"));
        items.add(new item("blue_concrete_powder"));
        items.add(new item("purple_concrete_powder"));
        items.add(new item("magenta_concrete_powder"));
        items.add(new item("pink_concrete_powder"));
        items.add(new item("white_concrete_powder"));
        items.add(new item("light_gray_concrete_powder"));
        items.add(new item("gray_concrete_powder"));
        items.add(new item("black_concrete_powder"));
        items.add(new item("brown_concrete_powder"));
        items.add(new item("glass"));
        items.add(new item("tinted_glass"));
        items.add(new item("red_stained_glass"));
        items.add(new item("orange_stained_glass"));
        items.add(new item("yellow_stained_glass"));
        items.add(new item("lime_stained_glass"));
        items.add(new item("green_stained_glass"));
        items.add(new item("light_blue_stained_glass"));
        items.add(new item("cyan_stained_glass"));
        items.add(new item("blue_stained_glass"));
        items.add(new item("purple_stained_glass"));
        items.add(new item("magenta_stained_glass"));
        items.add(new item("pink_stained_glass"));
        items.add(new item("white_stained_glass"));
        items.add(new item("light_gray_stained_glass"));
        items.add(new item("gray_stained_glass"));
        items.add(new item("black_stained_glass"));
        items.add(new item("brown_stained_glass"));
        items.add(new item("glass_pane"));
        items.add(new item("red_stained_glass_pane"));
        items.add(new item("orange_stained_glass_pane"));
        items.add(new item("yellow_stained_glass_pane"));
        items.add(new item("lime_stained_glass_pane"));
        items.add(new item("green_stained_glass_pane"));
        items.add(new item("light_blue_stained_glass_pane"));
        items.add(new item("cyan_stained_glass_pane"));
        items.add(new item("blue_stained_glass_pane"));
        items.add(new item("purple_stained_glass_pane"));
        items.add(new item("magenta_stained_glass_pane"));
        items.add(new item("pink_stained_glass_pane"));
        items.add(new item("white_stained_glass_pane"));
        items.add(new item("light_gray_stained_glass_pane"));
        items.add(new item("gray_stained_glass_pane"));
        items.add(new item("black_stained_glass_pane"));
        items.add(new item("brown_stained_glass_pane"));
        items.add(new item("shulker_box"));
        items.add(new item("red_shulker_box"));
        items.add(new item("orange_shulker_box"));
        items.add(new item("yellow_shulker_box"));
        items.add(new item("lime_shulker_box"));
        items.add(new item("green_shulker_box"));
        items.add(new item("light_blue_shulker_box"));
        items.add(new item("cyan_shulker_box"));
        items.add(new item("blue_shulker_box"));
        items.add(new item("purple_shulker_box"));
        items.add(new item("magenta_shulker_box"));
        items.add(new item("pink_shulker_box"));
        items.add(new item("white_shulker_box"));
        items.add(new item("light_gray_shulker_box"));
        items.add(new item("gray_shulker_box"));
        items.add(new item("black_shulker_box"));
        items.add(new item("brown_shulker_box"));
        items.add(new item("red_bed"));
        items.add(new item("orange_bed"));
        items.add(new item("yellow_bed"));
        items.add(new item("lime_bed"));
        items.add(new item("green_bed"));
        items.add(new item("light_blue_bed"));
        items.add(new item("cyan_bed"));
        items.add(new item("blue_bed"));
        items.add(new item("purple_bed"));
        items.add(new item("magenta_bed"));
        items.add(new item("pink_bed"));
        items.add(new item("white_bed"));
        items.add(new item("light_gray_bed"));
        items.add(new item("gray_bed"));
        items.add(new item("black_bed"));
        items.add(new item("brown_bed"));
        items.add(new item("bundle"));
        items.add(new item("red_bundle"));
        items.add(new item("orange_bundle"));
        items.add(new item("yellow_bundle"));
        items.add(new item("lime_bundle"));
        items.add(new item("green_bundle"));
        items.add(new item("cyan_bundle"));
        items.add(new item("light_blue_bundle"));
        items.add(new item("blue_bundle"));
        items.add(new item("purple_bundle"));
        items.add(new item("magenta_bundle"));
        items.add(new item("pink_bundle"));
        items.add(new item("white_bundle"));
        items.add(new item("light_gray_bundle"));
        items.add(new item("gray_bundle"));
        items.add(new item("black_bundle"));
        items.add(new item("brown_bundle"));
        items.add(new item("candle"));
        items.add(new item("red_candle"));
        items.add(new item("orange_candle"));
        items.add(new item("yellow_candle"));
        items.add(new item("lime_candle"));
        items.add(new item("green_candle"));
        items.add(new item("light_blue_candle"));
        items.add(new item("cyan_candle"));
        items.add(new item("purple_candle"));
        items.add(new item("magenta_candle"));
        items.add(new item("pink_candle"));
        items.add(new item("white_candle"));
        items.add(new item("light_gray_candle"));
        items.add(new item("gray_candle"));
        items.add(new item("black_candle"));
        items.add(new item("brown_candle"));
        items.add(new item("red_banner"));
        items.add(new item("orange_banner"));
        items.add(new item("yellow_banner"));
        items.add(new item("lime_banner"));
        items.add(new item("green_banner"));
        items.add(new item("light_blue_banner"));
        items.add(new item("cyan_banner"));
        items.add(new item("blue_banner"));
        items.add(new item("purple_banner"));
        items.add(new item("magenta_banner"));
        items.add(new item("pink_banner"));
        items.add(new item("white_banner"));
        items.add(new item("light_gray_banner"));
        items.add(new item("gray_banner"));
        items.add(new item("black_banner"));
        items.add(new item("brown_banner"));
        items.add(new item("red_dye"));
        items.add(new item("orange_dye"));
        items.add(new item("yellow_dye"));
        items.add(new item("lime_dye"));
        items.add(new item("green_dye"));
        items.add(new item("light_blue_dye"));
        items.add(new item("cyan_dye"));
        items.add(new item("blue_dye"));
        items.add(new item("purple_dye"));
        items.add(new item("magenta_dye"));
        items.add(new item("pink_dye"));
        items.add(new item("white_dye"));
        items.add(new item("light_gray_dye"));
        items.add(new item("gray_dye"));
        items.add(new item("black_dye"));
        items.add(new item("brown_dye"));
        items.add(new item("grass_block"));
        items.add(new item("dirt"));
        items.add(new item("coarse_dirt"));
        items.add(new item("rooted_dirt"));
        items.add(new item("podzol"));
        items.add(new item("mycelium"));
        items.add(new item("dirt_path"));
        items.add(new item("farmland"));
        items.add(new item("netherrack"));
        items.add(new item("crimson_nylium"));
        items.add(new item("warped_nylium"));
        items.add(new item("mud"));
        items.add(new item("clay"));
        items.add(new item("gravel"));
        items.add(new item("sand"));
        items.add(new item("red_sand"));
        items.add(new item("soul_sand"));
        items.add(new item("soul_soil"));
        items.add(new item("ice"));
        items.add(new item("packed_ice"));
        items.add(new item("blue_ice"));
        items.add(new item("calcite"));
        items.add(new item("magma_block"));
        items.add(new item("obsidian"));
        items.add(new item("crying_obsidian"));
        items.add(new item("bone_block"));
        items.add(new item("glowstone"));
        items.add(new item("snow_block"));
        items.add(new item("snow"));
        items.add(new item("moss_block"));
        items.add(new item("moss_carpet"));
        items.add(new item("pale_moss_block"));
        items.add(new item("pale_moss_carpet"));
        items.add(new item("pale_hanging_moss"));
        items.add(new item("dripstone_block"));
        items.add(new item("pointed_dripstone"));
        items.add(new item("amethyst_block"));
        items.add(new item("budding_amethyst"));
        items.add(new item("small_amethyst_bud"));
        items.add(new item("medium_amethyst_bud"));
        items.add(new item("large_amethyst_bud"));
        items.add(new item("amethyst_cluster"));
        items.add(new item("mushroom_stem"));
        items.add(new item("brown_mushroom_block"));
        items.add(new item("red_mushroom_block"));
        items.add(new item("shroomlight"));
        items.add(new item("brown_mushroom"));
        items.add(new item("red_mushroom"));
        items.add(new item("short_grass"));
        items.add(new item("tall_grass"));
        items.add(new item("fern"));
        items.add(new item("large_fern"));
        items.add(new item("dead_bush"));
        items.add(new item("dandelion"));
        items.add(new item("poppy"));
        items.add(new item("blue_orchid"));
        items.add(new item("allium"));
        items.add(new item("azure_bluet"));
        items.add(new item("red_tulip"));
        items.add(new item("orange_tulip"));
        items.add(new item("white_tulip"));
        items.add(new item("pink_tulip"));
        items.add(new item("oxeye_daisy"));
        items.add(new item("cornflower"));
        items.add(new item("lily_of_the_valley"));
        items.add(new item("sunflower"));
        items.add(new item("lilac"));
        items.add(new item("rose_bush"));
        items.add(new item("peony"));
        items.add(new item("open_eyeblossom"));
        items.add(new item("closed_eyeblossom"));
        items.add(new item("torchflower"));
        items.add(new item("pitcher_plant"));
        items.add(new item("wither_rose"));
        items.add(new item("azalea"));
        items.add(new item("flowering_azalea"));
        items.add(new item("pink_petals"));
        items.add(new item("spore_blossom"));
        items.add(new item("small_dripleaf"));
        items.add(new item("big_dripleaf"));
        items.add(new item("crimson_roots"));
        items.add(new item("warped_roots"));
        items.add(new item("nether_sprouts"));
        items.add(new item("weeping_vines"));
        items.add(new item("twisting_vines"));
        items.add(new item("vine"));
        items.add(new item("hanging_roots"));
        items.add(new item("glow_lichen"));
        items.add(new item("lily_pad"));
        items.add(new item("seagrass"));
        items.add(new item("sea_pickle"));
        items.add(new item("kelp"));
        items.add(new item("sugar_cane"));
        items.add(new item("cactus"));
        items.add(new item("bamboo"));
        items.add(new item("chorus_flower"));
        items.add(new item("chorus_plant"));
        items.add(new item("wheat_seeds"));
        items.add(new item("beetroot_seeds"));
        items.add(new item("pumpkin_seeds"));
        items.add(new item("melon_seeds"));
        items.add(new item("torchflower_seeds"));
        items.add(new item("pitcher_pod"));
        items.add(new item("nether_wart"));
        items.add(new item("cocoa_beans"));
        items.add(new item("glow_berries"));
        items.add(new item("sweet_berries"));
        items.add(new item("turtle_egg"));
        items.add(new item("sniffer_egg"));
        items.add(new item("frogspawn"));
        items.add(new item("creaking_heart"));
        items.add(new item("dried_kelp_block"));
        items.add(new item("melon"));
        items.add(new item("pumpkin"));
        items.add(new item("carved_pumpkin"));
        items.add(new item("jack_o_lantern"));
        items.add(new item("hay_block"));
        items.add(new item("tube_coral_block"));
        items.add(new item("brain_coral_block"));
        items.add(new item("bubble_coral_block"));
        items.add(new item("fire_coral_block"));
        items.add(new item("horn_coral_block"));
        items.add(new item("tube_coral"));
        items.add(new item("brain_coral"));
        items.add(new item("bubble_coral"));
        items.add(new item("fire_coral"));
        items.add(new item("horn_coral"));
        items.add(new item("tube_coral_fan"));
        items.add(new item("brain_coral_fan"));
        items.add(new item("bubble_coral_fan"));
        items.add(new item("fire_coral_fan"));
        items.add(new item("horn_coral_fan"));
        items.add(new item("dead_tube_coral_block"));
        items.add(new item("dead_brain_coral_block"));
        items.add(new item("dead_bubble_coral_block"));
        items.add(new item("dead_fire_coral_block"));
        items.add(new item("dead_horn_coral_block"));
        items.add(new item("dead_tube_coral"));
        items.add(new item("dead_brain_coral"));
        items.add(new item("dead_bubble_coral"));
        items.add(new item("dead_fire_coral"));
        items.add(new item("dead_horn_coral"));
        items.add(new item("dead_tube_coral_fan"));
        items.add(new item("dead_brain_coral_fan"));
        items.add(new item("dead_bubble_coral_fan"));
        items.add(new item("dead_fire_coral_fan"));
        items.add(new item("dead_horn_coral_fan"));
        items.add(new item("sponge"));
        items.add(new item("wet_sponge"));
        items.add(new item("sea_lantern"));
        items.add(new item("ochre_froglight"));
        items.add(new item("verdant_froglight"));
        items.add(new item("pearlescent_froglight"));
        items.add(new item("bee_nest"));
        items.add(new item("beehive"));
        items.add(new item("honeycomb_block"));
        items.add(new item("honey_block"));
        items.add(new item("slime_block"));
        items.add(new item("cobweb"));
        items.add(new item("sculk_vein"));
        items.add(new item("sculk"));
        items.add(new item("sculk_catalyst"));
        items.add(new item("sculk_shrieker"));
        items.add(new item("sculk_sensor"));
        items.add(new item("calibrated_sculk_sensor"));
        items.add(new item("torch"));
        items.add(new item("soul_torch"));
        items.add(new item("redstone_torch"));
        items.add(new item("lantern"));
        items.add(new item("soul_lantern"));
        items.add(new item("end_rod"));
        items.add(new item("redstone_lamp"));
        items.add(new item("repeater"));
        items.add(new item("comparator"));
        items.add(new item("target"));
        items.add(new item("lever"));
        items.add(new item("tripwire_hook"));
        items.add(new item("daylight_detector"));
        items.add(new item("piston"));
        items.add(new item("sticky_piston"));
        items.add(new item("dispenser"));
        items.add(new item("dropper"));
        items.add(new item("crafter"));
        items.add(new item("hopper"));
        items.add(new item("chest"));
        items.add(new item("trapped_chest"));
        items.add(new item("observer"));
        items.add(new item("tnt"));
        items.add(new item("crafting_table"));
        items.add(new item("furnace"));
        items.add(new item("smoker"));
        items.add(new item("blast_furnace"));
        items.add(new item("stonecutter"));
        items.add(new item("grindstone"));
        items.add(new item("cartography_table"));
        items.add(new item("fletching_table"));
        items.add(new item("smithing_table"));
        items.add(new item("loom"));
        items.add(new item("composter"));
        items.add(new item("cauldron"));
        items.add(new item("brewing_stand"));
        items.add(new item("enchanting_table"));
        items.add(new item("campfire"));
        items.add(new item("soul_campfire"));
        items.add(new item("anvil"));
        items.add(new item("chipped_anvil"));
        items.add(new item("damaged_anvil"));
        items.add(new item("bookshelf"));
        items.add(new item("chiseled_bookshelf"));
        items.add(new item("lectern"));
        items.add(new item("barrel"));
        items.add(new item("ender_chest"));
        items.add(new item("note_block"));
        items.add(new item("jukebox"));
        items.add(new item("bell"));
        items.add(new item("beacon"));
        items.add(new item("conduit"));
        items.add(new item("respawn_anchor"));
        items.add(new item("lodestone"));
        items.add(new item("end_crystal"));
        items.add(new item("ladder"));
        items.add(new item("scaffolding"));
        items.add(new item("lightning_rod"));
        items.add(new item("flower_pot"));
        items.add(new item("decorated_pot"));
        items.add(new item("suspicious_sand"));
        items.add(new item("suspicious_gravel"));
        items.add(new item("armor_stand"));
        items.add(new item("item_frame"));
        items.add(new item("glow_item_frame"));
        items.add(new item("painting"));
        items.add(new item("rail"));
        items.add(new item("powered_rail"));
        items.add(new item("detector_rail"));
        items.add(new item("activator_rail"));
        items.add(new item("minecart"));
        items.add(new item("hopper_minecart"));
        items.add(new item("chest_minecart"));
        items.add(new item("furnace_minecart"));
        items.add(new item("tnt_minecart"));
        items.add(new item("bucket"));
        items.add(new item("water_bucket"));
        items.add(new item("lava_bucket"));
        items.add(new item("powder_snow_bucket"));
        items.add(new item("milk_bucket"));
        items.add(new item("cod_bucket"));
        items.add(new item("salmon_bucket"));
        items.add(new item("tropical_fish_bucket"));
        items.add(new item("pufferfish_bucket"));
        items.add(new item("axolotl_bucket"));
        items.add(new item("tadpole_bucket"));
        items.add(new item("coal"));
        items.add(new item("charcoal"));
        items.add(new item("raw_iron"));
        items.add(new item("iron_ingot"));
        items.add(new item("iron_nugget"));
        items.add(new item("raw_copper"));
        items.add(new item("copper_ingot"));
        items.add(new item("raw_gold"));
        items.add(new item("gold_ingot"));
        items.add(new item("gold_nugget"));
        items.add(new item("diamond"));
        items.add(new item("emerald"));
        items.add(new item("redstone"));
        items.add(new item("lapis_lazuli"));
        items.add(new item("quartz"));
        items.add(new item("netherite_scrap"));
        items.add(new item("netherite_ingot"));
        items.add(new item("stick"));
        items.add(new item("flint"));
        items.add(new item("wheat"));
        items.add(new item("bone"));
        items.add(new item("bone_meal"));
        items.add(new item("string"));
        items.add(new item("feather"));
        items.add(new item("leather"));
        items.add(new item("rabbit_hide"));
        items.add(new item("honeycomb"));
        items.add(new item("ink_sac"));
        items.add(new item("glow_ink_sac"));
        items.add(new item("turtle_scute"));
        items.add(new item("armadillo_scute"));
        items.add(new item("slime_ball"));
        items.add(new item("clay_ball"));
        items.add(new item("resin_clump"));
        items.add(new item("prismarine_shard"));
        items.add(new item("prismarine_crystals"));
        items.add(new item("nautilus_shell"));
        items.add(new item("heart_of_the_sea"));
        items.add(new item("blaze_rod"));
        items.add(new item("breeze_rod"));
        items.add(new item("fire_charge"));
        items.add(new item("wind_charge"));
        items.add(new item("ender_pearl"));
        items.add(new item("ender_eye"));
        items.add(new item("heavy_core"));
        items.add(new item("nether_star"));
        items.add(new item("shulker_shell"));
        items.add(new item("popped_chorus_fruit"));
        items.add(new item("echo_shard"));
        items.add(new item("disc_fragment_5"));
        items.add(new item("bowl"));
        items.add(new item("glass_bottle"));
        items.add(new item("brick"));
        items.add(new item("nether_brick"));
        items.add(new item("resin_brick"));
        items.add(new item("sugar"));
        items.add(new item("glowstone_dust"));
        items.add(new item("gunpowder"));
        items.add(new item("rotten_flesh"));
        items.add(new item("spider_eye"));
        items.add(new item("fermented_spider_eye"));
        items.add(new item("rabbit_foot"));
        items.add(new item("glistering_melon_slice"));
        items.add(new item("magma_cream"));
        items.add(new item("ghast_tear"));
        items.add(new item("phantom_membrane"));
        items.add(new item("dragon_breath"));
        items.add(new item("paper"));
        items.add(new item("map"));
        items.add(new item("filled_map"));
        items.add(new item("book"));
        items.add(new item("writable_book"));
        items.add(new item("written_book"));
        items.add(new item("enchanted_book"));
        items.add(new item("potion"));
        items.add(new item("splash_potion"));
        items.add(new item("lingering_potion"));
        items.add(new item("tipped_arrow"));
        items.add(new item("goat_horn"));
        items.add(new item("firework_rocket"));
        items.add(new item("snowball"));
        items.add(new item("egg"));
        items.add(new item("experience_bottle"));
        items.add(new item("name_tag"));
        items.add(new item("lead"));
        items.add(new item("saddle"));
        items.add(new item("trial_key"));
        items.add(new item("ominous_trial_key"));
        items.add(new item("compass"));
        items.add(new item("recovery_compass"));
        items.add(new item("clock"));
        items.add(new item("spyglass"));
        items.add(new item("apple"));
        items.add(new item("golden_apple"));
        items.add(new item("enchanted_golden_apple"));
        items.add(new item("melon_slice"));
        items.add(new item("carrot"));
        items.add(new item("golden_carrot"));
        items.add(new item("potato"));
        items.add(new item("baked_potato"));
        items.add(new item("poisonous_potato"));
        items.add(new item("beetroot"));
        items.add(new item("dried_kelp"));
        items.add(new item("beef"));
        items.add(new item("cooked_beef"));
        items.add(new item("porkchop"));
        items.add(new item("cooked_porkchop"));
        items.add(new item("mutton"));
        items.add(new item("cooked_mutton"));
        items.add(new item("chicken"));
        items.add(new item("cooked_chicken"));
        items.add(new item("rabbit"));
        items.add(new item("cooked_rabbit"));
        items.add(new item("cod"));
        items.add(new item("cooked_cod"));
        items.add(new item("salmon"));
        items.add(new item("cooked_salmon"));
        items.add(new item("tropical_fish"));
        items.add(new item("pufferfish"));
        items.add(new item("bread"));
        items.add(new item("cookie"));
        items.add(new item("pumpkin_pie"));
        items.add(new item("cake"));
        items.add(new item("mushroom_stew"));
        items.add(new item("beetroot_soup"));
        items.add(new item("rabbit_stew"));
        items.add(new item("suspicious_stew"));
        items.add(new item("honey_bottle"));
        items.add(new item("ominous_bottle"));
        items.add(new item("wooden_sword"));
        items.add(new item("wooden_pickaxe"));
        items.add(new item("wooden_axe"));
        items.add(new item("wooden_shovel"));
        items.add(new item("wooden_hoe"));
        items.add(new item("stone_sword"));
        items.add(new item("stone_pickaxe"));
        items.add(new item("stone_axe"));
        items.add(new item("stone_shovel"));
        items.add(new item("stone_hoe"));
        items.add(new item("iron_sword"));
        items.add(new item("iron_pickaxe"));
        items.add(new item("iron_axe"));
        items.add(new item("iron_shovel"));
        items.add(new item("iron_hoe"));
        items.add(new item("golden_sword"));
        items.add(new item("golden_pickaxe"));
        items.add(new item("golden_axe"));
        items.add(new item("golden_shovel"));
        items.add(new item("golden_hoe"));
        items.add(new item("diamond_sword"));
        items.add(new item("diamond_pickaxe"));
        items.add(new item("diamond_axe"));
        items.add(new item("diamond_shovel"));
        items.add(new item("diamond_hoe"));
        items.add(new item("netherite_sword"));
        items.add(new item("netherite_pickaxe"));
        items.add(new item("netherite_axe"));
        items.add(new item("netherite_shovel"));
        items.add(new item("netherite_hoe"));
        items.add(new item("leather_helmet"));
        items.add(new item("leather_chestplate"));
        items.add(new item("leather_leggings"));
        items.add(new item("leather_boots"));
        items.add(new item("chainmail_helmet"));
        items.add(new item("chainmail_chestplate"));
        items.add(new item("chainmail_leggings"));
        items.add(new item("chainmail_boots"));
        items.add(new item("iron_helmet"));
        items.add(new item("iron_chestplate"));
        items.add(new item("iron_leggings"));
        items.add(new item("iron_boots"));
        items.add(new item("golden_helmet"));
        items.add(new item("golden_chestplate"));
        items.add(new item("golden_leggings"));
        items.add(new item("golden_boots"));
        items.add(new item("diamond_helmet"));
        items.add(new item("diamond_chestplate"));
        items.add(new item("diamond_leggings"));
        items.add(new item("diamond_boots"));
        items.add(new item("netherite_helmet"));
        items.add(new item("netherite_chestplate"));
        items.add(new item("netherite_leggings"));
        items.add(new item("netherite_boots"));
        items.add(new item("turtle_helmet"));
        items.add(new item("leather_horse_armor"));
        items.add(new item("iron_horse_armor"));
        items.add(new item("golden_horse_armor"));
        items.add(new item("diamond_horse_armor"));
        items.add(new item("wolf_armor"));
        items.add(new item("shield"));
        items.add(new item("bow"));
        items.add(new item("crossbow"));
        items.add(new item("arrow"));
        items.add(new item("spectral_arrow"));
        items.add(new item("trident"));
        items.add(new item("mace"));
        items.add(new item("totem_of_undying"));
        items.add(new item("elytra"));
        items.add(new item("flint_and_steel"));
        items.add(new item("shears"));
        items.add(new item("brush"));
        items.add(new item("fishing_rod"));
        items.add(new item("carrot_on_a_stick"));
        items.add(new item("warped_fungus_on_a_stick"));
        items.add(new item("music_disc_13"));
        items.add(new item("music_disc_blocks"));
        items.add(new item("music_disc_cat"));
        items.add(new item("music_disc_chirp"));
        items.add(new item("music_disc_far"));
        items.add(new item("music_disc_mall"));
        items.add(new item("music_disc_mellohi"));
        items.add(new item("music_disc_ward"));
        items.add(new item("music_disc_stal"));
        items.add(new item("music_disc_strad"));
        items.add(new item("music_disc_wait"));
        items.add(new item("music_disc_11"));
        items.add(new item("music_disc_5"));
        items.add(new item("music_disc_pigstep"));
        items.add(new item("music_disc_otherside"));
        items.add(new item("music_disc_relic"));
        items.add(new item("music_disc_creator"));
        items.add(new item("music_disc_creator_music_box"));
        items.add(new item("music_disc_precipice"));
        items.add(new item("field_masoned_banner_pattern"));
        items.add(new item("bordure_indented_banner_pattern"));
        items.add(new item("flower_banner_pattern"));
        items.add(new item("creeper_banner_pattern"));
        items.add(new item("skull_banner_pattern"));
        items.add(new item("mojang_banner_pattern"));
        items.add(new item("globe_banner_pattern"));
        items.add(new item("piglin_banner_pattern"));
        items.add(new item("flow_banner_pattern"));
        items.add(new item("guster_banner_pattern"));
        items.add(new item("angler_pottery_sherd"));
        items.add(new item("archer_pottery_sherd"));
        items.add(new item("arms_up_pottery_sherd"));
        items.add(new item("blade_pottery_sherd"));
        items.add(new item("brewer_pottery_sherd"));
        items.add(new item("burn_pottery_sherd"));
        items.add(new item("danger_pottery_sherd"));
        items.add(new item("explorer_pottery_sherd"));
        items.add(new item("flow_pottery_sherd"));
        items.add(new item("friend_pottery_sherd"));
        items.add(new item("guster_pottery_sherd"));
        items.add(new item("heart_pottery_sherd"));
        items.add(new item("heartbreak_pottery_sherd"));
        items.add(new item("howl_pottery_sherd"));
        items.add(new item("miner_pottery_sherd"));
        items.add(new item("mourner_pottery_sherd"));
        items.add(new item("plenty_pottery_sherd"));
        items.add(new item("prize_pottery_sherd"));
        items.add(new item("scrape_pottery_sherd"));
        items.add(new item("sheaf_pottery_sherd"));
        items.add(new item("shelter_pottery_sherd"));
        items.add(new item("skull_pottery_sherd"));
        items.add(new item("snort_pottery_sherd"));
        items.add(new item("netherite_upgrade_smithing_template"));
        items.add(new item("bolt_armor_trim_smithing_template"));
        items.add(new item("coast_armor_trim_smithing_template"));
        items.add(new item("dune_armor_trim_smithing_template"));
        items.add(new item("eye_armor_trim_smithing_template"));
        items.add(new item("flow_armor_trim_smithing_template"));
        items.add(new item("host_armor_trim_smithing_template"));
        items.add(new item("raiser_armor_trim_smithing_template"));
        items.add(new item("rib_armor_trim_smithing_template"));
        items.add(new item("sentry_armor_trim_smithing_template"));
        items.add(new item("shaper_armor_trim_smithing_template"));
        items.add(new item("silence_armor_trim_smithing_template"));
        items.add(new item("snout_armor_trim_smithing_template"));
        items.add(new item("spire_armor_trim_smithing_template"));
        items.add(new item("tide_armor_trim_smithing_template"));
        items.add(new item("vex_armor_trim_smithing_template"));
        items.add(new item("ward_armor_trim_smithing_template"));
        items.add(new item("wayfinder_armor_trim_smithing_template"));
        items.add(new item("wild_armor_trim_smithing_template"));
        items.add(new item("player_head"));
        items.add(new item("zombie_head"));
        items.add(new item("creeper_head"));
        items.add(new item("piglin_head"));
        items.add(new item("skeleton_skull"));
        items.add(new item("wither_skeleton_skull"));
        items.add(new item("dragon_head"));
        items.add(new item("dragon_egg"));
        items.add(new item("spawner"));
        items.add(new item("trial_spawner"));
        items.add(new item("vault"));
        items.add(new item("bedrock"));
        items.add(new item("reinforced_deepslate"));
        items.add(new item("end_portal_frame"));
        items.add(new item("petrified_oak_slab"));
        items.add(new item("infested_cobblestone"));
        items.add(new item("infested_deepslate"));
        items.add(new item("infested_stone"));
        items.add(new item("infested_stone_bricks"));
        items.add(new item("infested_mossy_stone_bricks"));
        items.add(new item("infested_cracked_stone_bricks"));
        items.add(new item("infested_chiseled_stone_bricks"));
        items.add(new item("barrier"));
        items.add(new item("structure_void"));
        items.add(new item("light"));
        items.add(new item("debug_stick"));
        items.add(new item("knowledge_book"));
        items.add(new item("command_block"));
        items.add(new item("chain_command_block"));
        items.add(new item("repeating_command_block"));
        items.add(new item("command_block_minecart"));
        items.add(new item("structure_block"));
        items.add(new item("jigsaw_block"));
        items.add(new item("allay_spawn_egg"));
        items.add(new item("axolotl_spawn_egg"));
        items.add(new item("bat_spawn_egg"));
        items.add(new item("bee_spawn_egg"));
        items.add(new item("blaze_spawn_egg"));
        items.add(new item("cat_spawn_egg"));
        items.add(new item("cave_spider_spawn_egg"));
        items.add(new item("chicken_spawn_egg"));
        items.add(new item("cod_spawn_egg"));
        items.add(new item("cow_spawn_egg"));
        items.add(new item("creaking_spawn_egg"));
        items.add(new item("creeper_spawn_egg"));
        items.add(new item("dolphin_spawn_egg"));
        items.add(new item("donkey_spawn_egg"));
        items.add(new item("drowned_spawn_egg"));
        items.add(new item("elder_guardian_spawn_egg"));
        items.add(new item("enderman_spawn_egg"));
        items.add(new item("endermite_spawn_egg"));
        items.add(new item("evoker_spawn_egg"));
        items.add(new item("fox_spawn_egg"));
        items.add(new item("frog_spawn_egg"));
        items.add(new item("ghast_spawn_egg"));
        items.add(new item("glow_squid_spawn_egg"));
        items.add(new item("goat_spawn_egg"));
        items.add(new item("guardian_spawn_egg"));
        items.add(new item("hoglin_spawn_egg"));
        items.add(new item("horse_spawn_egg"));
        items.add(new item("husk_spawn_egg"));
        items.add(new item("llama_spawn_egg"));
        items.add(new item("magma_cube_spawn_egg"));
        items.add(new item("mooshroom_spawn_egg"));
        items.add(new item("mule_spawn_egg"));
        items.add(new item("ocelot_spawn_egg"));
        items.add(new item("panda_spawn_egg"));
        items.add(new item("parrot_spawn_egg"));
        items.add(new item("phantom_spawn_egg"));
        items.add(new item("pig_spawn_egg"));
        items.add(new item("piglin_spawn_egg"));
        items.add(new item("piglin_brute_spawn_egg"));
        items.add(new item("pillager_spawn_egg"));
        items.add(new item("polar_bear_spawn_egg"));
        items.add(new item("pufferfish_spawn_egg"));
        items.add(new item("rabbit_spawn_egg"));
        items.add(new item("ravager_spawn_egg"));
        items.add(new item("salmon_spawn_egg"));
        items.add(new item("sheep_spawn_egg"));
        items.add(new item("shulker_spawn_egg"));
        items.add(new item("silverfish_spawn_egg"));
        items.add(new item("skeleton_spawn_egg"));
        items.add(new item("skeleton_horse_spawn_egg"));
        items.add(new item("slime_spawn_egg"));
        items.add(new item("sniffer_spawn_egg"));
        items.add(new item("spider_spawn_egg"));
        items.add(new item("squid_spawn_egg"));
        items.add(new item("stray_spawn_egg"));
        items.add(new item("strider_spawn_egg"));
        items.add(new item("tadpole_spawn_egg"));
        items.add(new item("trader_llama_spawn_egg"));
        items.add(new item("tropical_fish_spawn_egg"));
        items.add(new item("turtle_spawn_egg"));
        items.add(new item("vex_spawn_egg"));
        items.add(new item("villager_spawn_egg"));
        items.add(new item("vindicator_spawn_egg"));
        items.add(new item("wandering_trader_spawn_egg"));
        items.add(new item("warden_spawn_egg"));
        items.add(new item("witch_spawn_egg"));
        items.add(new item("wither_skeleton_spawn_egg"));
        items.add(new item("wolf_spawn_egg"));
        items.add(new item("zoglin_spawn_egg"));
        items.add(new item("zombie_spawn_egg"));
        items.add(new item("zombie_horse_spawn_egg"));
        items.add(new item("zombie_villager_spawn_egg"));
        items.add(new item("zombified_piglin_spawn_egg"));
        items.add(new item("bogged_spawn_egg"));
        items.add(new item("breeze_spawn_egg"));
        items.add(new item("iron_golem_spawn_egg"));
        items.add(new item("snow_golem_spawn_egg"));
        items.add(new item("ender_dragon_spawn_egg"));
        items.add(new item("wither_spawn_egg"));

        //Remove Null Items
        null_remove();

        //Initialize the books/potions/horns
        metaList_initialize();
    }

    private void initialize_mobs() {
        mobs.add(new item("chicken_spawn_egg"));
        mobs.add(new item("pig_spawn_egg"));
        mobs.add(new item("sheep_spawn_egg"));
        mobs.add(new item("cow_spawn_egg"));
        mobs.add(new item("mooshroom_spawn_egg"));
        mobs.add(new item("rabbit_spawn_egg"));
        mobs.add(new item("horse_spawn_egg"));
        mobs.add(new item("skeleton_horse_spawn_egg"));
        mobs.add(new item("zombie_horse_spawn_egg"));
        mobs.add(new item("donkey_spawn_egg"));
        mobs.add(new item("mule_spawn_egg"));
        mobs.add(new item("llama_spawn_egg"));
        mobs.add(new item("trader_llama_spawn_egg"));
        mobs.add(new item("wolf_spawn_egg"));
        mobs.add(new item("cat_spawn_egg"));
        mobs.add(new item("ocelot_spawn_egg"));
        mobs.add(new item("fox_spawn_egg"));
        mobs.add(new item("goat_spawn_egg"));
        mobs.add(new item("polar_bear_spawn_egg"));
        mobs.add(new item("panda_spawn_egg"));
        mobs.add(new item("sniffer_spawn_egg"));
        mobs.add(new item("bee_spawn_egg"));
        mobs.add(new item("bat_spawn_egg"));
        mobs.add(new item("parrot_spawn_egg"));
        mobs.add(new item("frog_spawn_egg"));
        mobs.add(new item("tadpole_spawn_egg"));
        mobs.add(new item("turtle_spawn_egg"));
        mobs.add(new item("cod_spawn_egg"));
        mobs.add(new item("salmon_spawn_egg"));
        mobs.add(new item("tropical_fish_spawn_egg"));
        mobs.add(new item("pufferfish_spawn_egg"));
        mobs.add(new item("axolotl_spawn_egg"));
        mobs.add(new item("dolphin_spawn_egg"));
        mobs.add(new item("squid_spawn_egg"));
        mobs.add(new item("glow_squid_spawn_egg"));
        mobs.add(new item("allay_spawn_egg"));
        mobs.add(new item("villager_spawn_egg"));
        mobs.add(new item("wandering_trader_spawn_egg"));
        mobs.add(new item("pillager_spawn_egg"));
        mobs.add(new item("witch_spawn_egg"));
        mobs.add(new item("vindicator_spawn_egg"));
        mobs.add(new item("evoker_spawn_egg"));
        mobs.add(new item("vex_spawn_egg"));
        mobs.add(new item("ravager_spawn_egg"));
        mobs.add(new item("iron_gollum_spawn_egg"));
        mobs.add(new item("snow_gollum_spawn_egg"));
        mobs.add(new item("zombie_spawn_egg"));
        mobs.add(new item("zombie_villager_spawn_egg"));
        mobs.add(new item("husk_spawn_egg"));
        mobs.add(new item("drowned_spawn_egg"));
        mobs.add(new item("skeleton_spawn_egg"));
        mobs.add(new item("stray_spawn_egg"));
        mobs.add(new item("bogged_spawn_egg"));
        mobs.add(new item("wither_skeleton_spawn_egg"));
        mobs.add(new item("creeper_spawn_egg"));
        mobs.add(new item("spider_spawn_egg"));
        mobs.add(new item("cave_spider_spawn_egg"));
        mobs.add(new item("enderman_spawn_egg"));
        mobs.add(new item("piglin_spawn_egg"));
        mobs.add(new item("piglin_brute_spawn_egg"));
        mobs.add(new item("zombified_piglin_spawn_egg"));
        mobs.add(new item("hoglin_spawn_egg"));
        mobs.add(new item("zoglin_spawn_egg"));
        mobs.add(new item("slime_spawn_egg"));
        mobs.add(new item("magma_cube_spawn_egg"));
        mobs.add(new item("breeze_spawn_egg"));
        mobs.add(new item("blaze_spawn_egg"));
        mobs.add(new item("silverfish_spawn_egg"));
        mobs.add(new item("endermite_spawn_egg"));
        mobs.add(new item("strider_spawn_egg"));
        mobs.add(new item("phantom_spawn_egg"));
        mobs.add(new item("guardian_spawn_egg"));
        mobs.add(new item("elder_guardian_spawn_egg"));
        mobs.add(new item("ghast_spawn_egg"));
        mobs.add(new item("shulker_spawn_egg"));
        mobs.add(new item("creaking_spawn_egg"));
        mobs.add(new item("warden_spawn_egg"));
        mobs.add(new item("ender_dragon_spawn_egg"));
        mobs.add(new item("wither_spawn_egg"));

        //Removes the null items
        null_remove_mobs();

        //Renames the items to remove the "spawn_egg"
        rename_mobs();
    }

    private void initialize_enchantedBooks() {
        set_enchants("mending", 1);
        set_enchants("unbreaking", 3);
        set_enchants("sharpness", 5);
        set_enchants("smite", 5);
        set_enchants("bane_of_arthropods", 5);
        set_enchants("looting", 3);
        set_enchants("fire_aspect", 2);
        set_enchants("sweeping_edge", 3);
        set_enchants("knockback", 2);
        set_enchants("efficiency", 5);
        set_enchants("fortune", 3);
        set_enchants("silk_touch", 1);
        set_enchants("protection", 4);
        set_enchants("fire_protection", 4);
        set_enchants("blast_protection", 4);
        set_enchants("projectile_protection", 4);
        set_enchants("feather_falling", 4);
        set_enchants("thorns", 3);
        set_enchants("aqua_affinity", 1);
        set_enchants("respiration", 3);
        set_enchants("depth_strider", 3);
        set_enchants("frost_walker", 2);
        set_enchants("soul_speed", 3);
        set_enchants("swift_sneak", 3);
        set_enchants("power", 5);
        set_enchants("punch", 2);
        set_enchants("flame", 1);
        set_enchants("infinity", 1);
        set_enchants("piercing", 4);
        set_enchants("multishot", 1);
        set_enchants("quick_charge", 3);
        set_enchants("lure", 3);
        set_enchants("luck_of_the_sea", 3);
        set_enchants("impaling", 5);
        set_enchants("loyalty", 3);
        set_enchants("riptide", 3);
        set_enchants("channeling", 1);
        set_enchants("density", 5);
        set_enchants("breach", 4);
        set_enchants("wind_burst", 3);
        set_enchants("binding_curse", 1);
        set_enchants("vanishing_curse", 1);
    }

    private void initialize_potions() {
        potion_list.add(new potions("water"));
        potion_list.add(new potions("thick"));
        potion_list.add(new potions("mundane"));
        potion_list.add(new potions("awkward"));
        potion_list.add(new potions("strength"));
        potion_list.add(new potions("weakness"));
        potion_list.add(new potions("healing"));
        potion_list.add(new potions("harming"));
        potion_list.add(new potions("regeneration"));
        potion_list.add(new potions("poison"));
        potion_list.add(new potions("oozing"));
        potion_list.add(new potions("infested"));
        potion_list.add(new potions("swiftness"));
        potion_list.add(new potions("slowness"));
        potion_list.add(new potions("leaping"));
        potion_list.add(new potions("slow_falling"));
        potion_list.add(new potions("fire_resistance"));
        potion_list.add(new potions("invisibility"));
        potion_list.add(new potions("night_vision"));
        potion_list.add(new potions("water_breathing"));
        potion_list.add(new potions("turtle_master"));
        potion_list.add(new potions("weaving"));
        potion_list.add(new potions("wind_charged"));
        potion_list.add(new potions("luck"));

        null_remove_potions();
    }

    private void initialize_horns() {
        instrument_list.add(new instruments("ponder", MusicInstrument.PONDER_GOAT_HORN));
        instrument_list.add(new instruments("sing", MusicInstrument.SING_GOAT_HORN));
        instrument_list.add(new instruments("seek", MusicInstrument.SEEK_GOAT_HORN));
        instrument_list.add(new instruments("feel", MusicInstrument.FEEL_GOAT_HORN));
        instrument_list.add(new instruments("admire", MusicInstrument.ADMIRE_GOAT_HORN));
        instrument_list.add(new instruments("call", MusicInstrument.CALL_GOAT_HORN));
        instrument_list.add(new instruments("yearn", MusicInstrument.YEARN_GOAT_HORN));
        instrument_list.add(new instruments("dream", MusicInstrument.DREAM_GOAT_HORN));
    }

    private void set_enchants(String enchant, int lvl) {
        for (Enchantment e : Enchantment.values()) {
            String s = e.toString().substring(27, e.toString().length()-1);
            if (enchant.equalsIgnoreCase(s)) {
                if (lvl == 1) {
                    enchantment_list.add(new enchantments(enchant, e, 1));
                } else {
                    for (int i = 1; i <= lvl; i++) {
                        enchantment_list.add(new enchantments(enchant + "_" + i, e, i));
                    }
                    enchantment_list.add(new enchantments(enchant, e, -1));
                }
            }
        }
    }

    //Sets the enchanted books, potions, and goat horns to have their correct metadata
    private void metaList_initialize() {
        //Enchanted books
        item temp;
        EnchantmentStorageMeta book_meta;
        for (enchantments i : enchantment_list) {
            temp = new item("enchanted_book");
            temp.set_name(i.name);
            book_meta = (EnchantmentStorageMeta) temp.item_meta;
            book_meta.addStoredEnchant(i.enchant, i.level, true);
            temp.item_stack.setItemMeta(book_meta);
            temp.item_meta = book_meta;
            items.add(temp);
        }
        //Potions
        PotionMeta potion_meta;
        for (potions i : potion_list) {
            //Potions
            temp = new item("potion");
            temp.set_name("potion_of_"+i.name);
            potion_meta = (PotionMeta) temp.item_meta;
            potion_meta.setBasePotionType(i.effect.get(0));
            temp.item_stack.setItemMeta(potion_meta);
            temp.item_meta = potion_meta;
            items.add(temp);

            //Splash Potions
            temp = new item("splash_potion");
            temp.set_name("splash_potion_of_"+i.name);
            potion_meta = (PotionMeta) temp.item_meta;
            potion_meta.setBasePotionType(i.effect.get(0));
            temp.item_stack.setItemMeta(potion_meta);
            temp.item_meta = potion_meta;
            items.add(temp);

            //Splash Potions
            temp = new item("lingering_potion");
            temp.set_name("lingering_potion_of_"+i.name);
            potion_meta = (PotionMeta) temp.item_meta;
            potion_meta.setBasePotionType(i.effect.get(0));
            temp.item_stack.setItemMeta(potion_meta);
            temp.item_meta = potion_meta;
            items.add(temp);

            //Tipped Arrows
            temp = new item("tipped_arrow");
            temp.set_name("tipped_arrow_of_"+i.name);
            potion_meta = (PotionMeta) temp.item_meta;
            potion_meta.setBasePotionType(i.effect.get(0));
            temp.item_stack.setItemMeta(potion_meta);
            temp.item_meta = potion_meta;
            items.add(temp);
        }
        //Goat Horns
        MusicInstrumentMeta instrument_meta;
        for (instruments i : instrument_list) {
            temp = new item("goat_horn");
            temp.set_name(i.name);
            instrument_meta = (MusicInstrumentMeta) temp.item_meta;
            instrument_meta.setInstrument(i.instrument);
            temp.item_stack.setItemMeta(instrument_meta);
            temp.item_meta = instrument_meta;
            items.add(temp);
        }
    }

    //Removes the null items in the list
    private void null_remove() {
        int i = 0;
        while (i < items.size()) {
            if (items.get(i).item_type.isAir()) {
                items.remove(i);
            } else {
                i++;
            }
        }
    }

    //Removes the null mobs in the list
    private void null_remove_mobs() {
        int i = 0;
        while (i < mobs.size()) {
            if (mobs.get(i).item_type.isAir()) {
                mobs.remove(i);
            } else {
                i++;
            }
        }
    }

    //Removes the null potions in the list
    private void null_remove_potions() {
        int i = 0;
        while (i < potion_list.size()) {
            if (potion_list.get(i).effect.size() == 0) {
                potion_list.remove(i);
            } else {
                i++;
            }
        }
    }

    //Renames the mobs to remove "spawn_egg"
    private void rename_mobs() {
        for (int i=0; i<mobs.size(); i++) {
            mobs.get(i).set_name(mobs.get(i).item_name.substring(0, mobs.get(i).item_name.length()-10));
        }
    }

    //Gets the version of minecraft
    public int get_version() {
        String version = Bukkit.getVersion();
        int start = 0;
        int stop = 0;
        for (int i=0; i < version.length(); i++) {
            if (version.charAt(i) == '.') {
                start = i;
                break;
            }
        }
        for (int i=start+1; i < version.length(); i++) {
            if (version.charAt(i) == ')' || version.charAt(i) == '.') {
                stop = i;
                break;
            }
        }
        version = version.substring(start+1, stop);
        return Integer.parseInt(version);
    }
}

class enchantments {
    String name;
    Enchantment enchant;
    int level;

    public enchantments(String name, Enchantment enchant, int level) {
        this.name = name;
        this.enchant = enchant;
        this.level = level;
    }
}

class potions {
    String name;
    ArrayList<PotionType> effect;

    public potions(String name) {
        this.name = name;
        ArrayList<String> temp = new ArrayList<>();
        temp.add(name);
        temp.add("long_"+name);
        temp.add("strong_"+name);
        effect = to_potion(temp);
    }

    private ArrayList<PotionType> to_potion(List<String> strings) {
        ArrayList<PotionType> temp = new ArrayList<>();
        for (String s : strings) {
            for (PotionType p : PotionType.values()) {
                if (p.toString().equalsIgnoreCase(s)) {
                    temp.add(p);
                }
            }
        }
        return temp;
    }
}

class instruments {
    String name;
    MusicInstrument instrument;

    public instruments(String name, MusicInstrument instrument) {
        this.name = name;
        this.instrument = instrument;
    }
}
